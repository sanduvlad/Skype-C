//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IClientToServerHandle")]
    public interface IClientToServerHandle {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SignIn", ReplyAction="http://tempuri.org/IClientToServerHandle/SignInResponse")]
        int SignIn(string username, string password, string channelURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SignIn", ReplyAction="http://tempuri.org/IClientToServerHandle/SignInResponse")]
        System.Threading.Tasks.Task<int> SignInAsync(string username, string password, string channelURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SignOut", ReplyAction="http://tempuri.org/IClientToServerHandle/SignOutResponse")]
        int SignOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SignOut", ReplyAction="http://tempuri.org/IClientToServerHandle/SignOutResponse")]
        System.Threading.Tasks.Task<int> SignOutAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/Register", ReplyAction="http://tempuri.org/IClientToServerHandle/RegisterResponse")]
        int Register(string username, string password, string email, string nume);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/Register", ReplyAction="http://tempuri.org/IClientToServerHandle/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(string username, string password, string email, string nume);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/ChangeStatus", ReplyAction="http://tempuri.org/IClientToServerHandle/ChangeStatusResponse")]
        void ChangeStatus(string username, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/ChangeStatus", ReplyAction="http://tempuri.org/IClientToServerHandle/ChangeStatusResponse")]
        System.Threading.Tasks.Task ChangeStatusAsync(string username, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SearchUsers", ReplyAction="http://tempuri.org/IClientToServerHandle/SearchUsersResponse")]
        System.Collections.Generic.List<string> SearchUsers(string query, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SearchUsers", ReplyAction="http://tempuri.org/IClientToServerHandle/SearchUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> SearchUsersAsync(string query, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/GetFriends", ReplyAction="http://tempuri.org/IClientToServerHandle/GetFriendsResponse")]
        System.Collections.Generic.List<string> GetFriends(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/GetFriends", ReplyAction="http://tempuri.org/IClientToServerHandle/GetFriendsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetFriendsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/AddFriend", ReplyAction="http://tempuri.org/IClientToServerHandle/AddFriendResponse")]
        void AddFriend(string username, string friend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/AddFriend", ReplyAction="http://tempuri.org/IClientToServerHandle/AddFriendResponse")]
        System.Threading.Tasks.Task AddFriendAsync(string username, string friend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/GetMessages", ReplyAction="http://tempuri.org/IClientToServerHandle/GetMessagesResponse")]
        System.Collections.Generic.List<string> GetMessages(string username, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/GetMessages", ReplyAction="http://tempuri.org/IClientToServerHandle/GetMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetMessagesAsync(string username, string receiver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SendMessage", ReplyAction="http://tempuri.org/IClientToServerHandle/SendMessageResponse")]
        void SendMessage(string fromUsername, string toUsername, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientToServerHandle/SendMessage", ReplyAction="http://tempuri.org/IClientToServerHandle/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string fromUsername, string toUsername, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientToServerHandleChannel : Client.ServiceReference1.IClientToServerHandle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientToServerHandleClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IClientToServerHandle>, Client.ServiceReference1.IClientToServerHandle {
        
        public ClientToServerHandleClient() {
        }
        
        public ClientToServerHandleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientToServerHandleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientToServerHandleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientToServerHandleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SignIn(string username, string password, string channelURL) {
            return base.Channel.SignIn(username, password, channelURL);
        }
        
        public System.Threading.Tasks.Task<int> SignInAsync(string username, string password, string channelURL) {
            return base.Channel.SignInAsync(username, password, channelURL);
        }
        
        public int SignOut(string username) {
            return base.Channel.SignOut(username);
        }
        
        public System.Threading.Tasks.Task<int> SignOutAsync(string username) {
            return base.Channel.SignOutAsync(username);
        }
        
        public int Register(string username, string password, string email, string nume) {
            return base.Channel.Register(username, password, email, nume);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(string username, string password, string email, string nume) {
            return base.Channel.RegisterAsync(username, password, email, nume);
        }
        
        public void ChangeStatus(string username, string status) {
            base.Channel.ChangeStatus(username, status);
        }
        
        public System.Threading.Tasks.Task ChangeStatusAsync(string username, string status) {
            return base.Channel.ChangeStatusAsync(username, status);
        }
        
        public System.Collections.Generic.List<string> SearchUsers(string query, string username) {
            return base.Channel.SearchUsers(query, username);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> SearchUsersAsync(string query, string username) {
            return base.Channel.SearchUsersAsync(query, username);
        }
        
        public System.Collections.Generic.List<string> GetFriends(string username) {
            return base.Channel.GetFriends(username);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetFriendsAsync(string username) {
            return base.Channel.GetFriendsAsync(username);
        }
        
        public void AddFriend(string username, string friend) {
            base.Channel.AddFriend(username, friend);
        }
        
        public System.Threading.Tasks.Task AddFriendAsync(string username, string friend) {
            return base.Channel.AddFriendAsync(username, friend);
        }
        
        public System.Collections.Generic.List<string> GetMessages(string username, string receiver) {
            return base.Channel.GetMessages(username, receiver);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetMessagesAsync(string username, string receiver) {
            return base.Channel.GetMessagesAsync(username, receiver);
        }
        
        public void SendMessage(string fromUsername, string toUsername, string message) {
            base.Channel.SendMessage(fromUsername, toUsername, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string fromUsername, string toUsername, string message) {
            return base.Channel.SendMessageAsync(fromUsername, toUsername, message);
        }
    }
}
